name: Linux Build

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  formatting:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - name: Format files
        run: find . -type f -a \( -name "*.cc" -o -name "*.h" \) -print0 | xargs -0 clang-format-9 -i
      - name: Check for differences
        run: |
          git status --porcelain
          git status --porcelain | xargs -I {} -0 test -z \"{}\"
  build:
    runs-on: ${{matrix.config.os}}
    strategy:
      matrix:
        config:
          - name: Mac OS X
            cxx: clang++
            cc: clang
            mode: Release
            os: macos-latest
          - name: GCC 9 Release
            cxx: g++-9
            cc: gcc-9
            mode: Release
            os: ubuntu-latest
          - name: GCC 9 Debug
            cxx: g++-9
            cc: gcc-9
            mode: Debug
            os: ubuntu-latest
          - name: Clang 9 Release
            cxx: clang++-9
            cc: clang-9
            mode: Release
            cxxflags: -stdlib=libc++
            ldflags: -lc++abi
            os: ubuntu-latest
          - name: Clang Tidy
            cxx: clang++-9
            cc: clang-9
            mode: Debug
            cxxflags: -stdlib=libc++
            ldflags: -lc++abi
            lint: true
            os: ubuntu-latest
          - key: Clang 9 Sanitizer
            cxx: clang++-9
            cc: clang-9
            mode: Release
            cflags: -fsanitize=address,undefined -fno-omit-frame-pointer
            cxxflags: -fsanitize=address,undefined -fno-omit-frame-pointer -stdlib=libc++
            ldflags: -lc++abi
            os: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - uses: seanmiddleditch/gha-setup-ninja@master

      # ==== INSTALL ====
      - name: Install LLVM
        if: matrix.config.cc == 'clang-9' && matrix.config.os == 'ubuntu-latest'
        env:
          DEBIAN_FRONTEND: noninteractive
        run: sudo apt-get install -y --no-install-recommends libc++-9-dev libc++abi-9-dev clang-tidy-9

      # ==== BUILD ====
      - name: CMake
        run: |
          cmake \
            -G Ninja -S . -B build \
            -DCMAKE_C_COMPILER=${{ matrix.config.cc }} \
            -DCMAKE_CXX_COMPILER=${{ matrix.config.cxx }} \
            -DCMAKE_C_FLAGS="${{ matrix.config.cflags }}" \
            -DCMAKE_CXX_FLAGS="${{ matrix.config.cxxflags }}" \
            -DCMAKE_CXX_FLAGS_DEBUG="" \
            -DCMAKE_CXX_LINKER_FLAGS=${{ matrix.config.ldflags }}" \
            -DCMAKE_CXX_EXE_LINKER_FLAGS="${{ matrix.config.ldflags }} \
            -DCMAKE_BUILD_TYPE=${{ matrix.config.mode }}

      - name: Build
        run: cmake --build build --target res-example

      # ==== RUN ====
      - name: Run Tests
        run: ./build/res-example
